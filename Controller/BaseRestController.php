<?phpnamespace Kna\HalBundle\Controller;use FOS\RestBundle\Controller\AbstractFOSRestController;use Kna\HalBundle\Filter\FilterFactoryInterface;use Kna\HalBundle\Filter\FilterInterface;use Kna\HalBundle\Representation\RepresentationFactoryInterface;abstract class BaseRestController extends AbstractFOSRestController{    /**     * @return FilterFactoryInterface|object     */    public function getFilterFactory(): FilterFactoryInterface    {        return $this->get('kna_hal.filter_factory');    }    /**     * @param string $type     * @param array $options     * @return FilterInterface     */    public function createFilter(string $type, array $options = []): FilterInterface    {        return $this->getFilterFactory()->create($type, $options);    }    /**     * @return RepresentationFactoryInterface|object     */    public function getRepresentationFactory(): RepresentationFactoryInterface    {        return $this->get('kna_hal.representation_factory');    }    /**     * @param string $name     * @param mixed ...$args     * @return mixed     */    public function createRepresentation(string $name, ...$args)    {        return call_user_func_array(            [$this->getRepresentationFactory(), 'create'],            array_merge([$name], $args)        );    }    /**     * {@inheritdoc}     */    public static function getSubscribedServices()    {        $subscribedServices = parent::getSubscribedServices();        $subscribedServices['kna_hal.filter_factory'] = FilterFactoryInterface::class;        $subscribedServices['kna_hal.representation_factory'] = RepresentationFactoryInterface::class;        return $subscribedServices;    }}